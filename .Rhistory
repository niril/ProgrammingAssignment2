install.packages("swirl")
install.packages("swirl")
install.packages(c("class", "foreign", "MASS", "nlme", "nnet", "spatial"))
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
x <- 1
print(x)
x
msg <- "hello"
msg
x <- [1,3]
x <- 1:20
x
x(2)
x[x]
x[2]
clear
clr
cl
z <- 1L
x <- 1L
x
0/0
1/inf
1/Inf
1/0
x <- c(0.1, 0.2)
x
i
x <-i^2
x <-i
x <-0+1i
x
x^2
as.numeric(x)
as.logical(x)
x <- list(1,"a")
x
x <- list(1,2,"a")
x
z <- 1:10
x <- list(1,z,"a")
x
x(2,1)
x[2,1]
x[2]
m <- matrix (1:2)
m
m <- matrix (1:6)
m
x <- 1:3
y <- 5:8
rbind(x,y)
cbind(x,y)
attributes(x)
library(swirl)
rm(list=ls()
)
install_from_swirl("R programming")
install_from_swirl("R_programming")
install_from_swirl("R_Programming")
x <- c(4,TRUE)
x
x <-c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
dim(cbind(x,y)
)
x <- list(2,"a","b", TRUE)
x[[1]]
class(x[[1]])
x<-1:4
y<-2:3
x+y
x <- read.csv(hw_data.csv)
x <- read.csv("hw_data.csv")
getwd()
x <- read.csv(hw_data.csv)
data <- read.csv(hw_data.csv)
data <- read.csv("hw_data.csv")
data <- read.csv("hw1_data.csv")
data[1:3]
data[1]
data[1,1]
data[1,1:3]
data[1:2,1:3]
data[1:2]
data[1:2,1:3]
data[1:2,1:10]
data[1:2,]
dim(data)
data[152:153,]
data[47,]
data[47,"ozone"]
data[47]
data[47,]
data[47,"Ozone"]
is.na(,"Ozone")
is.na(data[,"Ozone"])
table(is.na(data[,"Ozone"]))
bad <-is.na(data[,"Ozone"])
data[!bad,"Ozone"]
mean(data[!bad,"Ozone"])
data[,"Ozone"] >31
x<-data[,"Ozone"] >31
y<-data[,"Temp"]>90
good <- complete.cases(x,y)
good
x
good <- complete.cases(data[,"Ozone"],data[,"Temp"])
good
newdata <- data(good)
newdata <- data(good,)
good
data
data(good,)
data[good]
data[good,]
newdata<-data[good,]
x<-newdata[,"Ozone"] >31
y<-newdata[,"Temp"]>90
x
newdata<-newdata[x]
newdata<-newdata[x,]
newdata<-newdata[y,]
newdata
190+212
402/2
data
data[â—‹,"Ozone"]
data[,"Ozone"]
isna.data[,"Ozone"]
is.na(data[,"Ozone"])
bad=is.na(data[,"Ozone"])
newdata<-data[!bad]
newdata<-data[,!bad]
newdata<-data[!bad,]
newdata
bad=is.na(newdata[,"Ozone"])
bad=is.na(newdata[,"Temp"])
table(bad)
newdata[,"Ozone"]>31
newdata[,"Temp"]>90
newdata[,"Temp"]>90+newdata[,"Ozone"]
newdata[,"Temp"]>90&newdata[,"Ozone"]
good=newdata[,"Temp"]>90&newdata[,"Ozone"]
good
good<-newdata[,"Temp"]>90&newdata[,"Ozone"]
newdata<-newdata[,good]
newdata[,good]
newdata[good,]
newdata[good,"Solar.R"]
mean(newdata[good,"Solar.R"])
good=data[,"Month"]=6
newdata<-data[good]
newdata
newdata<-data[,good]
newdata
good
good<-data[,"Month"]=6
good<-data["Month"]=6
good<-data["Month",]=6
good<-data["Month",]==6
good
good<-data["Month",]=6
good<-data[,"Month"]=6
good <- data[,"Month"]=6
good <- data[,"Month"]==6
good
data[,"Month]
)
data[,"Month"]
data <- read.csv("hw1_data.csv")
data[,"Month"]
good <- data[,"Month"]==6
good
newdata<- data[,good]
newdata<- data[good,]
newdata
mean(newdata[,"Temp"])
good <- data[,"Month"]==5
newdata<- data[good,]
max(newdata[,"Temp"])
max(newdata[,"Ozone"])
bad=is.na(newdata[,"Ozone"]
)
bad
newdata <-newdata[!bad,]
max(newdata[,"Ozone"])
data[47,]
is.na(,"Ozone")
is.na(data[,"Ozone"])
bad=is.na(data[,"Ozone"])
table(bad)
newdata<-data[!bad,]
mean(newdata[,"Ozone"])
library(swirl)
install_from_swirl("R_Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <-(z-1)^2
my_sqrt <-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
setwd("~/")
add2 <- function(x,y) {
x+y
}
add2(3,5)
above <- function(x,n){
use <- x>n
x[use]
}
x <- 1:20
above(x,12)
columnmean <- function(x) {
means <-numeric(ncol(x))
for i in ncol(x) {
means[i]<- mean(x[,i])
}
means
}
columnmean <- function(x) {
means <-numeric(ncol(x))
for i in ncol(x) {
means[i]<- mean(x[,i])
}
means
}
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in ncol(x) {
means[i]<- mean(x[,i])
}
means
}
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in ncol(x)) {
means[i]<- mean(x[,i])
}
means
}
x<-matrix(1:10)
x
x<-matrix(1:10,1:10)
x
x<-matrix(1:10,2,5)
x
means(x)
columnmean(x)
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in ncol(x)) {
ncol(x)
means[i]<- mean(x[,i])
}
means
}
columnmean(x)
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in ncol(x)) {
print(i)
means[i]<- mean(x[,i])
}
means
}
columnmean(x)
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in 1:ncol(x)) {
print(i)
means[i]<- mean(x[,i])
}
means
}
columnmean(x)
}
cube <- function(x,n) {
x^3
}
cube(3)
x<-1:10
if(x>5) {
x<-0
}
f <- function(x) {
g <- function(y) {
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
f <- function(x) {
g <- function(y) {
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
x<-5
y<- if(x<3) {
N
} else {
10
}
y
h<- function(x,y = NULL, d=3L) {
z <-cbind(x,d)
if (d==3L)
return(g)
g<-g+10
g
}
h
directory = "specdata/"
data<-read.csv(directory&"1.csv")
directory = "specdata"
data
data<-read.csv(paste(directory,"1.csv"))
data<-read.csv(paste(directory,"/1.csv"))
directory = specdata
directory = specdata
data<-read.csv(paste(specdata,"/1.csv"))
data<-read.csv(paste("specdata","/1.csv"))
data<-read.csv(paste("specdata","/1.csv",sep""))
data<-read.csv(paste("specdata","/1.csv",sep=""))
data<-read.csv(paste("specdata","/001.csv",sep=""))
data<-read.csv(paste("/specdata","/001.csv",sep=""))
get(WD)
getwd
getwd()
setwd("/github/R_W2")
getwd()
setwd("GitHub/ProgrammingAssignment2")
getwd()
source(cachematrix.R)
source("cachematrix.R")
cachesolve(1:10)
cacheSolve(1:10)
1:10
cacheSolve(1:10)
cacheSolve(vector(1:10)
)
?"vector"
cacheSolve(numeric(1:10)
)
?numeric
cacheSolve(c(1,2,3,4,5))
makeCacheMatrix(c(1,2,3,4,5))
cacheSolve(c(1,2,3,4,5))
makeCacheMatrix(c(1,2,3,4,5))
x<-c(1,2,3,4,5)
x
makeCacheMatrix(x
)
makeCacheMatrix(x)
source(cachematrix.R)
source("cachematrix.R")
makeCacheMatrix(x)
source("cachematrix.R")
makeVector(x)
a <- makeVector(c(1,2,3,4))
cachemean (a)
> B = matrix(
+   c(2, 4, 3, 1, 5, 7,1,5,4),
+   nrow=3,
+   ncol=3)
> B = matrix(
+   c(2, 4, 3, 1, 5, 7, 1, 5, 4),
+   nrow=3,
+   ncol=3)
> B <- matrix(
+   c(2, 4, 3, 1, 5, 7, 1, 5, 4),
+   nrow=3,
+   ncol=3)
?"matrix"
B = matrix(c(1,2,3,4))
B
B = matrix(c(4,8,1,4,2,9,4,6,3),nrow=3,ncol=3)
B
m = matrix(c(4,8,1,4,2,9,4,6,3),nrow=3,ncol=3)
solve(m)
cacheSolve(m)
cacheSolve(m)
source("cachematrix.R")
cacheSolve(m)
debug()
traceback
traceback()
cacheSolve(m)
traceback()
m
source("cacheVector.R")
source("makeVector.R")
cachemean(x)
a <- makeVector(c(1,2,3,4))
cachemean(a)
a<-makeMatrix(m)
a<-makeCacheMatrix(m)
cacheSolve(a)
solve(a)
solve(m)
a$getsolve()
